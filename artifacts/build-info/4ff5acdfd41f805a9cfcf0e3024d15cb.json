{
	"id": "4ff5acdfd41f805a9cfcf0e3024d15cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Score.sol": {
				"content": "contract Score {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Score.sol": {
				"Score": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Score.sol\":0:25  contract Score {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Score.sol\":0:25  contract Score {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220232fea999b186b3928d48041a2386841258e9464632865846de7d05fcc97a5a564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220232fea999b186b3928d48041a2386841258e9464632865846de7d05fcc97a5a564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x2F 0xEA SWAP10 SWAP12 XOR PUSH12 0x3928D48041A2386841258E94 PUSH5 0x632865846D 0xE7 0xD0 0x5F 0xCC SWAP8 0xA5 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "0:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220232fea999b186b3928d48041a2386841258e9464632865846de7d05fcc97a5a564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x2F 0xEA SWAP10 SWAP12 XOR PUSH12 0x3928D48041A2386841258E94 PUSH5 0x632865846D 0xE7 0xD0 0x5F 0xCC SWAP8 0xA5 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "0:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 25,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220232fea999b186b3928d48041a2386841258e9464632865846de7d05fcc97a5a564736f6c63430008110033",
									".code": [
										{
											"begin": 0,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 25,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 25,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 25,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Score.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Score.sol\":\"Score\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Score.sol\":{\"keccak256\":\"0x2245a281f137f06faf80166067034832b8be6b6b5965644ca97ff1ee4c7ec815\",\"urls\":[\"bzz-raw://8af30b7536f647a9d2882c502fdaa4f7941a0df5c577c1d388b421a026a9a7dc\",\"dweb:/ipfs/QmXXTfXrbkZkKuH36UGN2vFqubzkKud9z37gnH26K7iUt9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Score.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Score.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"\n--> Score.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Score.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Score.sol": {
				"ast": {
					"absolutePath": "Score.sol",
					"exportedSymbols": {
						"Score": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Score",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "Score",
							"nameLocation": "9:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "0:25:0",
							"usedErrors": []
						}
					],
					"src": "0:25:0"
				},
				"id": 0
			}
		}
	}
}