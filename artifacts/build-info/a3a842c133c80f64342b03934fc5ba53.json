{
	"id": "a3a842c133c80f64342b03934fc5ba53",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Score.sol": {
				"content": "contract Score {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Score.sol": {
				"Score": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Score.sol\":0:17  contract Score {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Score.sol\":0:17  contract Score {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201d00f5092a845d1deb64c2d45e2e57dda08b0d9ee2f7acddca94a196e03cba2c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201d00f5092a845d1deb64c2d45e2e57dda08b0d9ee2f7acddca94a196e03cba2c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR STOP CREATE2 MULMOD 0x2A DUP5 0x5D SAR 0xEB PUSH5 0xC2D45E2E57 0xDD LOG0 DUP12 0xD SWAP15 0xE2 0xF7 0xAC 0xDD 0xCA SWAP5 LOG1 SWAP7 0xE0 EXTCODECOPY 0xBA 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "0:17:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201d00f5092a845d1deb64c2d45e2e57dda08b0d9ee2f7acddca94a196e03cba2c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR STOP CREATE2 MULMOD 0x2A DUP5 0x5D SAR 0xEB PUSH5 0xC2D45E2E57 0xDD LOG0 DUP12 0xD SWAP15 0xE2 0xF7 0xAC 0xDD 0xCA SWAP5 LOG1 SWAP7 0xE0 EXTCODECOPY 0xBA 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "0:17:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 17,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 17,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d00f5092a845d1deb64c2d45e2e57dda08b0d9ee2f7acddca94a196e03cba2c64736f6c63430008110033",
									".code": [
										{
											"begin": 0,
											"end": 17,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 17,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 17,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 17,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 17,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 17,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Score.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Score.sol\":\"Score\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Score.sol\":{\"keccak256\":\"0x089ce2a9122a2acf785bc16f2b3e5bc503685d06e60b2ab605a2187c6aad7bef\",\"urls\":[\"bzz-raw://799af8ddc9c0cada112afad42a9634bf5c5eb24429d0eb891a105c58e925abf4\",\"dweb:/ipfs/Qmct921xpfgyABfSsof5PkRntJBpiQDYcZpufYtxQH4T7F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Score.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Score.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"\n--> Score.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Score.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Score.sol": {
				"ast": {
					"absolutePath": "Score.sol",
					"exportedSymbols": {
						"Score": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Score",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "Score",
							"nameLocation": "9:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "0:17:0",
							"usedErrors": []
						}
					],
					"src": "0:17:0"
				},
				"id": 0
			}
		}
	}
}